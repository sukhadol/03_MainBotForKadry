import asyncio

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils.executor import start_webhook


from aiogram.utils import executor
from aiogram.utils.markdown import LIST_MD_SYMBOLS, text
from aiogram import Dispatcher
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import os
import facebook

#++++++++++++++++++++++++++++++++++++++++

print ('..====== –Ω–∞—á–∞–ª–∏ ===== ')
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ Heroku –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ, —Å–¥–µ–ª–∞–Ω–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ –æ–±–æ–ª–æ—á–∫–µ Heroku
if 'We_are_on_Heroku' in os.environ:
    Run_On_Heroku = True
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Heroku: CHAT --- ADMIN_CHAT --- TOKEN --- HEROKU_APP_NAME --- We_are_on_Heroku --- ACCESS_TOKEN_Facebook
    CHAT = os.getenv('CHAT')
    ADMIN_CHAT = os.getenv('ADMIN_CHAT')
    BOT_TOKEN = os.getenv('TOKEN')
    HEROKU_APP_NAME = os.getenv('HEROKU_APP_NAME')

    # –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –í–ö
    groupId_in_VK = os.environ.get("groupId_in_VK")
    token_VK_access_token_to_walls = os.environ.get("token_VK_access_token_to_walls")  # –¢–æ–∫–µ–Ω –í–ö —Å –¥–æ—Å—Ç—É–ø–æ–º —Ç–æ–ª—å–∫–æ –∫ wall, –¥–ª—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∏—è —Ç–∞–º —Å–æ–æ–±—â–µ–Ω–∏–π

    # –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –§–ë
    ACCESS_TOKEN_Facebook = os.environ.get("ACCESS_TOKEN_Facebook")
    groupid_in_FB = 1013708529168332

    # webhook settings
    WEBHOOK_HOST = f'https://{HEROKU_APP_NAME}.herokuapp.com'
    WEBHOOK_PATH = f'/webhook/{BOT_TOKEN}' 
    WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

    # webserver settings
    WEBAPP_HOST = '0.0.0.0'
    WEBAPP_PORT = int(os.environ.get('PORT', '8443')) # —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±–µ—Ä–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, –≤—Å–µ –≤—Ä–µ–º—è —Ä–∞–∑–Ω—ã–µ

    loop = asyncio.get_event_loop()
    bot = Bot(token=BOT_TOKEN, loop=loop)
    #dp = Dispatcher(bot)
    storage=MemoryStorage()
    dp = Dispatcher(bot, storage=storage)


    async def on_startup(dp):
        await bot.delete_webhook(dp) 
        await bot.set_webhook(WEBHOOK_URL)
        # –∏ –¥–∞–ª—å—à–µ –≤—Å–µ —á—Ç–æ –Ω–∞–¥–æ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞

    async def on_shutdown(dp):
        # –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞–¥–æ –¥–ª—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
        pass

else:
    print ('..Run_On_Heroku = NO')
    Run_On_Heroku = False # –ª–æ–∫–∞–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –±–µ–∑ webhook 
    from config import *
    bot = Bot(token=TOKEN)
    storage=MemoryStorage()
    dp = Dispatcher(bot, storage=storage)

print('....–≤–≤–æ–¥–Ω—É—é —á–∞—Å—Ç—å –∑–∞–≤–µ—Ä—à–∏–ª–∏')


#======================== –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

# –û–±—ä—è–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–Ω–µ—á–Ω—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–æ–≤ (FSM ‚Äî Finite State Machine)
class Status (StatesGroup):
    st_00 = State() # –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª–∏
    st_01 = State() # –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–æ –ø–æ–∫–∞ –Ω–µ –≤–≤–µ–ª–∏ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    st_02 = State() # –≤–≤–µ–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    st_ADM_02 = State() # –æ—Å–æ–±–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—â–µ–Ω–∏—è —Å –ê–¥–º–∏–Ω–æ–º
# –¥–ª—è —è–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—Ä–æ–∫–∞ —Ç–∏–ø–∞ —ç—Ç–æ–π:
# await Status.st_00.set() # !!! –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –°–¢–ê–¢–£–° –Ω–µ –≤—Å—Ç–∞–µ—Ç, –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º, –Ω–∞–¥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ü–û–ú–û–©–¨ –∏–ª–∏ START
# –º—ã —è–≤–Ω–æ –≥–æ–≤–æ—Ä–∏–º –±–æ—Ç—É –≤—Å—Ç–∞—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ st_00 –∏–∑ –≥—Ä—É–ø–ø—ã Status
# state = Dispatcher.get_current().current_state()


global begining_text, text_of_obiavy, text_from_to_telegram, text_from_to_export, full_text_telegram, full_text_export, codeDO, send_admin
# –µ—â–µ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ textOfForvardObiavyHtml, textOfForvardObiavyPlain - –æ–Ω–∏ —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑–¥–µ–ª–µ –ª–æ–≤–ª–∏ —Ñ–æ—Ä–≤–∞—Ä–¥–∞ –∏–∑ –∏–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
begining_text = '–ø—É—Å—Ç–æ–µ –Ω–∞—á–∞–ª–æ'
text_of_obiavy = '–ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤—ã'
full_text_telegram = '–ø—É—Å—Ç–æ–π —Å—É–º–º–∞—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç'
full_text_export = '–ø—É—Å—Ç–æ–π —Å—É–º–º–∞—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç'
codeDO = '0' #–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
send_admin = 'No'
textOfForvardObiavy = '' # —ç—Ç–æ –¥–ª—è —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç—ã—Ö –∞–¥–º–∏–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π

# –∑–∞–¥–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è id —Å–æ–æ–±—â–µ–Ω–∏–π, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É –Ω–∞—Å –±—É–¥—É—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –∏—Ö –ø–æ—Ç–æ–º —É–¥–∞–ª—è—Ç—å
list_msg_with_inline = []

#===== –±–ª–æ–∫ –ü–æ–º–æ—â–∏
help_message = text(
    "–≠—Ç–æ –±–æ—Ç —Ä–∞–∑–¥–µ–ª–∞ \"–ó–∞–∫—É–ø–æ—á–Ω—ã–π —Ö–∞–± Pro–ó–∞–∫—É–ø–∫–∏\".\n",
    "–û–Ω –ø–æ–º–æ–∂–µ—Ç –≤ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–ª–∏ —Ä–µ–∑—é–º–µ, –∞ —Ç–∞–∫–∂–µ —á–µ—Ä–µ–∑ –Ω–µ–≥–æ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–∞–Ω–∞–ª–∞.",
    "–ù—É –∏ –≤–æ–æ–±—â–µ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ —á—Ç–æ –Ω–∞–¥–æ.",
	"\n–ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã:",
	"- –ù–æ–≤–æ—Å—Ç–∏ –ò–Ω—Ç–µ—Ä—Ñ–∞–∫—Å–∞ –ø–æ –∑–∞–∫—É–ø–∫–∞–º https://t.me/InterfaxProZakupkiNews",
	"- –†–∞–±–æ—Ç–∞ –∏ –ö–∞—Ä—å–µ—Ä–∞ –≤ –∑–∞–∫—É–ø–∫–∞—Ö: –í–∞–∫–∞–Ω—Å–∏–∏ & –ö–∞–Ω–¥–∏–¥–∞—Ç—ã https://t.me/jobzakupki",
    "\n–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –±–æ—Ç –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π",
	"/start, –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–Ω–∏–∑—É –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö (–æ—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞) –∏ –ü–û–ú–û–©–¨",
    "\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑ –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã Facebook \"–ö–∞—Ä—å–µ—Ä–∞ –≤ –∑–∞–∫—É–ø–∫–∞—Ö: –í–∞–∫–∞–Ω—Å–∏–∏ & –ö–∞–Ω–¥–∏–¥–∞—Ç—ã\" (https://www.facebook.com/groups/1013708529168332)",
	sep="\n"
)

@dp.message_handler(lambda message: message.text == btn_help, state="*")
@dp.message_handler(commands=['help'], state="*")
async def process_help_command(message: types.Message):
    await message.reply(help_message, disable_web_page_preview = True) # —É–±—Ä–∞–Ω –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Å—ã–ª–æ–∫
    await Status.st_00.set()



#===== –±–ª–æ–∫ –ù–∞—á–∞–ª–∞
btn_zapusk = '–ó–∞–ø—É—Å–∫'
btn_help = '–ü–æ–º–æ—â—å'
MAIN_KB = ReplyKeyboardMarkup(
                             resize_keyboard=True).row(
                             KeyboardButton(btn_zapusk),
                             KeyboardButton(btn_help)
                             )

def def_to_whom_say(SomeOne): # –ø–æ–¥–ø—Ä–æ–≥—Ä–∞–º–º–∞ —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å –∫–∞–∫ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç WhomToSay (–∫–∞–∫ –∑–æ–≤—É—Ç –∏–ª–∏ id), JustIdYNo (–ø–æ–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ WhomToSay - –∏–º—è –∏–ª–∏ id)
    if ((SomeOne.first_name is None) and (SomeOne.last_name is None)):
        if (SomeOne.username is None):
            #WhomToSay = str(SomeOne.id) # —Ç.–µ. –∫–æ–≥–¥–∞ –≤–æ–æ–±—â–µ –≤—Å–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∏ –∑–Ω–∞—á–∏—Ç –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id 
            WhomToSay = '–ò–º—è–°–∫—Ä—ã—Ç–æ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º' # —Ç.–µ. –∫–æ–≥–¥–∞ –≤–æ–æ–±—â–µ –≤—Å–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∏ –∑–Ω–∞—á–∏—Ç –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id 
            JustIdYNo = 'Yes'  
        else:
            WhomToSay = '@' + str(SomeOne.username)
            JustIdYNo = 'No'
    elif (SomeOne.first_name is None):
        WhomToSay = str(SomeOne.last_name)
        JustIdYNo = 'No'
    elif (SomeOne.last_name is None):
        WhomToSay = str(SomeOne.first_name)
        JustIdYNo = 'No'
    else:
        WhomToSay = str(SomeOne.first_name) + ' ' + str(SomeOne.last_name)
        JustIdYNo = 'No'
    return [WhomToSay, JustIdYNo]

@dp.message_handler(commands=['start'], state="*")
async def process_start_command(message: types.Message):
    #def_to_whom_say(message.from_user)
    text_from_to_telegram = '[' + def_to_whom_say(message.from_user)[0] + '](tg://user?id=' + str(message.from_user.id) +')' # —Å—É—Ç—å: —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —Å–∫—Ä—ã—Ç–æ –µ–≥–æ –∏–º—è –∏–ª–∏ –Ω–µ—Ç 
    print ('...from_user.id = ')
    print(message.from_user.id)
    print ('...text_from_to_telegram = ')
    print(text_from_to_telegram)
   # await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {text_from_to_telegram}!\n–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É-2 tg://user?id=' + str(message.from_user.id), parse_mode='Markdown')
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {text_from_to_telegram}!\n–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É üëã\n(–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨)', reply_markup=MAIN_KB, parse_mode='Markdown')
 

    # –¥—É–±–ª–∏—Ä—É—é—â–∏–π –±–ª–æ–∫, –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ, —á—É—Ç—å –ø–æ–∑–∂–µ
    # if (message.from_user.username is None):
    #     #fff
    # elif ((message.from_user.first_name is None) or (message.from_user.last_name is None)):
    #     if ((message.from_user.first_name is None) and (message.from_user.last_name is None)):
    #         #whom_say = message.from_user.username
    #         await message.answer(f'–ü—Ä–∏–≤–µ—Ç, @{message.from_user.username}!\n –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É üëã\n(–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨)', reply_markup=MAIN_KB)
    #     else:
    #         if (message.from_user.first_name is None):
    #             whom_say = message.from_user.last_name
    #             await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {whom_say} (@{message.from_user.username})!\n –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É üëã\n(–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨)', reply_markup=MAIN_KB)
    #         else:
    #             whom_say = message.from_user.first_name
    #             await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {whom_say} (@{message.from_user.username})!\n –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É üëã\n(–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨)', reply_markup=MAIN_KB)
    # else:
    #     whom_say = message.from_user.first_name + ' ' + message.from_user.last_name
    #     await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {whom_say} (@{message.from_user.username})!\n–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É üëã\n(–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨)', reply_markup=MAIN_KB)
    await Status.st_00.set()


#======================== –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_inline_kb_full():
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ì–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
	inline_btn_1 = InlineKeyboardButton('üîé –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é', callback_data='btn1')
	inline_btn_2 = InlineKeyboardButton('‚úç –†–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä–µ–∑—é–º–µ', callback_data='btn2')
	inline_kb_full = types.InlineKeyboardMarkup(row_width=2) # –º–æ–∂–Ω–æ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–æ —Ç–æ–ª–∫—É –Ω–µ—Ç resize_keyboard=True, one_time_keyboard=True
	inline_kb_full.row(inline_btn_1, inline_btn_2)
	inline_btn_3 = InlineKeyboardButton('‚ö° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–∞–±–æ—Ç—ã/—É—Å–ª—É–≥–∏ –≤ —Å—Ñ–µ—Ä–µ –∑–∞–∫—É–ø–æ–∫', callback_data='btn3')
	inline_kb_full.add(inline_btn_3)
	inline_btn_4 = InlineKeyboardButton('üîî –ò–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª', callback_data='btn4')
	inline_kb_full.add(inline_btn_4)
	inline_btn_5 = InlineKeyboardButton('‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å', callback_data='btn5')
	inline_btn_6 = InlineKeyboardButton('‚òéÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º', callback_data='btn6')
	inline_kb_full.add(inline_btn_5, inline_btn_6)
	# inline_kb_full.add(InlineKeyboardButton('–ù–∞ —Å–∞–π—Ç –∞–¥–º–∏–Ω–∞', url='https://sukhadol.ru',callback_data='btn7'))
	return inline_kb_full

import requests
@dp.message_handler(lambda message: message.text == btn_zapusk, state="*")
@dp.message_handler(commands=['begin'], state="*")
async def process_command_main_menu(message: types.Message, state: FSMContext):
    await Status.st_00.set()
    await message.answer("–ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:",
                        reply_markup=get_inline_kb_full())
# —Å—É—Ç—å –æ—á–∏—Å—Ç–∫–∏: –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç —á—Ç–æ –æ–Ω —Ö–æ—á–µ—Ç, —Ç–æ –≤—Å–µ –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞–¥–æ —Å–∫—Ä—ã—Ç—å. 
# –ü—Ä–∏—á–µ–º –∏—Ö –¥–æ —ç—Ç–æ–≥–æ –º–æ–≥–ª–æ –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ, –Ω–∞–¥–æ —Å–∫—Ä—ã—Ç—å –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ. –ê –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–¥–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–º–Ω–∏—Ç—å –≤—Å–µ id —Ç–∞–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –∞ –ø–æ—Ç–æ–º –ø–æ –Ω–∏–º —Ü–∏–∫–ª–æ–º –ø—Ä–æ–π—Ç–∏—Å—å –∏ –∑–∞–∫—Ä—ã—Ç—å. 
    next_id = message.message_id
    list_msg_with_inline.append(next_id) # –¥–æ–±–∞–≤–ª—è–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è. –ù–æ! –≠—Ç–æ id —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ó–ê–ü–£–°–ö, —Ç.–µ. —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Ç–æ–º –Ω–∞–¥–æ –±—É–¥–µ—Ç —Å (id+1)

@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn'), state=Status.st_00)
async def process_callback_from_main_menu(callback_query: types.CallbackQuery):
    global begining_text, text_of_obiavy, text_from_to_telegram, text_from_to_export, full_text_telegram, full_text_export, codeDO, send_admin
    await Status.st_01.set()
    codeDO = callback_query.data[-1]  # —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ –±—É–¥–µ–º –¥–∞–ª—å—à–µ –¥–µ–ª–∞—Ç—å
    #text_from_to_telegram_part = <a href="tg://user?id={callback_query.from_user.id}">{def_to_whom_say(callback_query.from_user)[0]}</a> # —ç—Ç–æ —Ç–∞–∫–æ–π —Ñ–æ—Ä–º–∞—Ç –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏ –ø—Ä–∏ –º–∞—Ä–∫–¥–∞—É–Ω–µ HTML –¥–∞–ª–µ–µ —Ä–∞–±–æ—Ç–∞–µ—Ç 
    text_from_to_telegram = '[' + def_to_whom_say(callback_query.from_user)[0] + '](tg://user?id=' + str(callback_query.from_user.id) +')' # —Å—É—Ç—å: —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —Å–∫—Ä—ã—Ç–æ –µ–≥–æ –∏–º—è –∏–ª–∏ –Ω–µ—Ç 
    text_from_to_export = def_to_whom_say(callback_query.from_user)[0] # —Å—É—Ç—å: –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, —Å–∫—Ä—ã—Ç–æ –µ–≥–æ –∏–º—è –∏–ª–∏ –Ω–µ—Ç 

    #text_from_to_telegram = '@' + str(callback_query.from_user.username) # –∑–¥–µ—Å—å –ø–æ–∫–∞ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ username, –Ω–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –æ–Ω –Ω–µ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if codeDO.isdigit():
        codeDO = int(codeDO)
    if codeDO == 1:
        send_admin = 'No'
        await bot.send_message(callback_query.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏: –†–ê–ó–ú–ï–°–¢–ò–¢–¨ –í–ê–ö–ê–ù–°–ò–Æ') 
        await bot.send_message(callback_query.from_user.id, f'–î–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∂–µ –µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —É–∫–∞–∑–∞–≤:\n- –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é,\n- –≥–æ—Ä–æ–¥,\n- –¥–æ–ª–∂–Ω–æ—Å—Ç—å, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—é –∏ –µ–≥–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏,\n- –æ–∂–∏–¥–∞–µ–º–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ,\n-–∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏.\n\n–í –æ–ø–∏—Å–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Ä–∞–∑–º–µ—Ç–∫–∏ Markdown\n  \*bold text\* (*–≤—ã–¥–µ–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω—ã–º*)\n  \_italic text\_ (_–∫—É—Ä—Å–∏–≤_)\n  \[text](URL) (–¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏).\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª - —Ç–æ —Å–º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ —Ä–∞–º–∫–∞—Ö –µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.', parse_mode='Markdown') 
        begining_text = '*#–≤–∞–∫–∞–Ω—Å–∏—è* –æ—Ç ' 
    elif codeDO == 2:
        send_admin = 'No'
        await bot.send_message(callback_query.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏: –†–ê–ó–ú–ï–°–¢–ò–¢–¨ —Ä–µ–∑—é–º–µ') 
        await bot.send_message(callback_query.from_user.id, f'–î–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∑—é–º–µ –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∂–µ –µ–≥–æ —Ç–µ–∫—Å—Ç.\n\n–í —Ç–µ–∫—Å—Ç–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Ä–∞–∑–º–µ—Ç–∫–∏ Markdown\n  \*bold text\* (*–≤—ã–¥–µ–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω—ã–º*)\n  \_italic text\_ (_–∫—É—Ä—Å–∏–≤_)\n  \[text](URL) (–¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏)\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª - —Ç–æ —Å–º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ —Ä–∞–º–∫–∞—Ö –µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.', parse_mode='Markdown') 
        begining_text = '*#—Ä–µ–∑—é–º–µ* –æ—Ç ' 
    elif codeDO == 3:
        send_admin = 'No'
        await bot.send_message(callback_query.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏: –ü–†–ï–î–õ–û–ñ–ò–¢–¨ –£–°–õ–£–ì–ò') 
        await bot.send_message(callback_query.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –í–∞–º–∏ —É—Å–ª—É–≥.\n\n–í –æ–ø–∏—Å–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã —Ä–∞–∑–º–µ—Ç–∫–∏ Markdown\n  \*bold text\* (*–≤—ã–¥–µ–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω—ã–º*)\n  \_italic text\_ (_–∫—É—Ä—Å–∏–≤_)\n  \[text](URL) (–¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏)\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª - —Ç–æ —Å–º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ —Ä–∞–º–∫–∞—Ö –µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.', parse_mode='Markdown')  
        begining_text = '*#–£—Å–ª—É–≥–∏_–≤_—Å—Ñ–µ—Ä–µ_–∑–∞–∫—É–ø–æ–∫* –æ—Ç '
    elif codeDO == 4:
        send_admin = 'No'
        await bot.send_message(callback_query.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏: –†–ê–ó–ú–ï–°–¢–ò–¢–¨ –ò–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï') 
        await bot.send_message(callback_query.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª - —Ç–æ —Å–º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ —Ä–∞–º–∫–∞—Ö –µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è.') 
        begining_text = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç '
    elif codeDO == 5:
        send_admin = 'No'
        await bot.send_message(callback_query.from_user.id, help_message, disable_web_page_preview=True) 
    elif codeDO == 6:
        send_admin = 'Yes'
        await bot.send_message(callback_query.from_user.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏:\n–ù–ê–ü–†–ê–í–ò–¢–¨ –°–û–û–ë–©–ï–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê–ú –ö–ê–ù–ê–õ–ê') 
        await bot.send_message(callback_query.from_user.id, f'–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ') 
        begining_text = '–°–û–û–ë–©–ï–ù–ò–ï –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê–ú –æ—Ç ' 
    else:
        #await bot.answer_callback_query(callback_query.id)
    	await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! codeDO={codeDO}')
    # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –ü—Ä–∏—á–µ–º –Ω–∞–¥–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é, –Ω–æ –∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ
    while ((len(list_msg_with_inline)) > 0):
        #print('........len —á–∏—Å–ª–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–µ–∫—É—â–µ–µ = ' + str((len(list_msg_with_inline))))
        id_tmp = list_msg_with_inline.pop() # –≤–∑—è–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —É–¥–∞–ª–∏–ª–∏ –µ–≥–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        #print('...id_tmp = ' + str(id_tmp))
        #print('...len —Ç–µ–∫—É—â–µ–µ2 = ' + str((len(list_msg_with_inline))))
        await bot.edit_message_reply_markup(callback_query.message.chat.id, message_id = id_tmp+1)
        #print('... –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è')
    # –ù–µ –∑–∞–±—ã–≤–∞–µ–º –æ—Ç—á–∏—Ç–∞—Ç—å—Å—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–±—ç–∫–∞
    await callback_query.answer()


#======================== –ú–µ–Ω—é —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è 

def get_inline_kb_Yes_No():
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é Yes-No
	inline_YNbtn_1 = InlineKeyboardButton('–î–∞', callback_data='YNbtn1')
	inline_YNbtn_2 = InlineKeyboardButton('–ù–µ—Ç', callback_data='YNbtn2')
	inline_kb_Yes_No = types.InlineKeyboardMarkup(row_width=2)
	inline_kb_Yes_No.row(inline_YNbtn_1, inline_YNbtn_2)
	#inline_YNbtn_3 = InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏', callback_data='YNbtn3')
	#inline_kb_Yes_No.add(inline_YNbtn_3)
	return inline_kb_Yes_No

# –°—é–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –æ—Ç–≤–µ—Ç —Å —Ç–µ–∫—Å—Ç–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Status.st_01) 
async def vvod_txt(message: types.Message):
    global begining_text, text_of_obiavy, full_text_telegram
    text_of_obiavy = message.text
    full_text_telegram= begining_text + text_from_to_telegram + '\n\n' + text_of_obiavy
   # full_text_telegram = full_text_telegram + types.chat.chat_title(chat_id=CHAT)
    await message.answer(text=f'–ò—Ç–æ–≥–æ –ø–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç:\n\n{full_text_telegram}', parse_mode='Markdown')
    await Status.st_02.set()
    await message.answer("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É?",
                        reply_markup=get_inline_kb_Yes_No())


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('YNbtn'), state=Status.st_02)
async def process_callback_from_menuYN(callback_query: types.CallbackQuery):
    global begining_text, text_of_obiavy, text_from_to_telegram, text_from_to_export, full_text_telegram, full_text_export, codeDO, send_admin
    codeYN = callback_query.data[-1]
    if codeYN.isdigit():
        codeYN = int(codeYN)
    await Status.st_00.set()
    if codeYN == 1:
        if send_admin == 'Yes':
            await bot.send_message(callback_query.from_user.id, f'–°–ø–∞—Å–∏–±–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.') 
            await bot.send_message(chat_id = ADMIN_CHAT, text=full_text_telegram, parse_mode='Markdown') 
        else:
            await bot.send_message(chat_id = CHAT, text=full_text_telegram, parse_mode='Markdown') 
            if codeDO < 3:   
                # –Ω–∏–∂–µ 5 —Å—Ç—Ä–æ—á–µ–∫ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –í–ö
                message_to_VK = ('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º:\n\n' + begining_text + text_from_to_export + '\n\n' + text_of_obiavy + '\n\n–ò—Å—Ç–æ—á–Ω–∏–∫:\nhttps://t.me/jobzakupki')
                message_to_VK = message_to_VK.replace("*#–≤–∞–∫–∞–Ω—Å–∏—è*", "#–≤–∞–∫–∞–Ω—Å–∏—è")
                message_to_VK = message_to_VK.replace("*#—Ä–µ–∑—é–º–µ*", "#—Ä–µ–∑—é–º–µ")
                params = {'owner_id':int(groupId_in_VK), 'from_group': 1, 'message': message_to_VK, 'access_token': token_VK_access_token_to_walls, 'v':5.103} # —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥—É–±–ª—è –Ω–∞ –í–ö
                requests.get('https://api.vk.com/method/wall.post', params=params)
                # –Ω–∏–∂–µ 3 —Å—Ç—Ä–æ—á–∫–∏ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –§–ë
                graph = facebook.GraphAPI(ACCESS_TOKEN_Facebook)
                message_to_FB = message_to_VK
                graph.put_object(groupid_in_FB, "feed", message=message_to_FB)
            await bot.send_message(callback_query.from_user.id, f'–°–ø–∞—Å–∏–±–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ') 
        await bot.send_message(callback_query.from_user.id, f'–ß–µ–º-—Ç–æ –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å? –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –µ—â–µ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å–∫" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /begin \n–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤:\n https://t.me/InterfaxProZakupkiNews \n https://t.me/jobzakupki\n\nP.S.–ï—Å–ª–∏ –≤–Ω–∏–∑—É –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨ - –≤–≤–µ–¥–∏—Ç–µ /start –∏ –Ω–∞–∂–º–∏—Ç–µ Enter') 
    elif codeYN == 2:
        await bot.send_message(callback_query.from_user.id, f'–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –µ—â–µ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫—É \"–ó–∞–ø—É—Å–∫\" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /begin') 
        #await process_start_command()
        #await Status.st_00.set()
    else:
    	await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! codeYN={codeYN}')
    # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await callback_query.message.delete_reply_markup() 
    # –ù–µ –∑–∞–±—ã–≤–∞–µ–º –æ—Ç—á–∏—Ç–∞—Ç—å—Å—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–±—ç–∫–∞
    await callback_query.answer()

# –õ–æ–≤–∏–º –≤—Å–µ –∏–Ω—ã–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã - –≤ —Ä–∞–º–∫–∞—Ö state=Status.st_02, —Ç.–µ. –∫–æ–≥–¥–∞ –≤–≤–µ–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Status.st_02) 
async def strange_txt(message: types.Message):
    await message.reply("–ù–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. –ù–∞–∂–º–∏—Ç–µ –≤—ã—à–µ –∫–Ω–æ–ø–∫–∏ –î–∞ –∏–ª–∏ –ù–µ—Ç, –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–Ω–µ–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –∏–ª–∏ –æ—Ç–∫–∞–∑–∞ –æ—Ç –Ω–µ–≥–æ")


#======================== –ú–µ–Ω—é —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –§–û–†–í–ê–†–î–ù–´–• –ø–æ—Å—Ç–æ–≤ –∞–¥–º–∏–Ω–æ–º
# –∞–ª–≥–æ—Ä–∏—Ç–º: –µ—Å–ª–∏ –≤–∑—è—Ç—å –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º–∞ –∏ —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç—å –µ–≥–æ –Ω–∞ –±–æ—Ç–∞ @CareerZakupkiBot, —Ç–æ —ç—Ç–æ—Ç –ø–æ—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∞–∑–º–µ—â–µ–Ω —É –Ω–∞—Å –≤ –∫–∞–Ω–∞–ª–µ

def ADMIN_get_inline_kb_Yes_No():
	# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ê–î–ú–ò–ù–°–ö–û–ì–û –º–µ–Ω—é Yes-No
	inline_admin_YNbtn_1 = InlineKeyboardButton('–î–∞, –í–ê–ö–ê–ù–°–ò–Ø', callback_data='AdminYNbtn1')
	inline_admin_YNbtn_2 = InlineKeyboardButton('–ù–µ—Ç, –ù–ï –†–ê–ó–ú–ï–©–ê–¢–¨', callback_data='AdminYNbtn2')
	Admin_inline_kb_Yes_No = types.InlineKeyboardMarkup(row_width=2)
	Admin_inline_kb_Yes_No.row(inline_admin_YNbtn_1, inline_admin_YNbtn_2)
	inline_admin_YNbtn_3 = InlineKeyboardButton('–ù–µ—Ç, —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∫–∞–∫ –†–ï–ó–Æ–ú–ï', callback_data='AdminYNbtn3')
	Admin_inline_kb_Yes_No.add(inline_admin_YNbtn_3)
	return Admin_inline_kb_Yes_No


# –õ–æ–≤–∏–º –≤—Å–µ –∏–Ω—ã–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã - –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è, –∫—Ä–æ–º–µ –µ—Å–ª–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ st_ADM_02
@dp.message_handler(content_types=types.ContentTypes.TEXT, state=Status.st_00 or Status.st_01 or Status.st_02) # –ø–æ—á–µ–º—É-—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –≤—ã–¥–∞–ª –æ—à–∏–±–∫—É state=Status.st_00 | Status.st_01 | Status.st_02
async def strange_txt(message: types.Message):
    global begining_text, text_of_obiavy, text_from_to_telegram, text_from_to_export, full_text_telegram, full_text_export, codeDO, send_admin, textOfForvardObiavyHtml, textOfForvardObiavyPlain
    if message.from_user.username == "sukhadol":
        if message.forward_from is None:                  # —Ç.–µ. –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ –ø—Ä—è–º–æ –≤ —á–∞—Ç
            await message.answer("–æ –º–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ß—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –∏ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ!! (–≤–æ–∑–º–æ–∂–Ω–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∫—Ä—ã—Ç–∞ –∏–Ω—Ñ–∞ –æ —Å–µ–±–µ)") 
        else:
            await message.answer(text=f'–æ –º–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –≠—Ç–æ —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç–∞—è –≤–∞–∫–∞–Ω—Å–∏—è –æ—Ç <strong><a href="tg://user?id={message.forward_from.id}">{def_to_whom_say(message.forward_from)[0]}</a></strong> –∏ –Ω–∞–¥–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–∞–Ω–∞–ª–µ?', parse_mode = 'html') 

            textOfForvardObiavyHtml = '<strong>#–≤–∞–∫–∞–Ω—Å–∏—è</strong> –æ—Ç <strong><a href=\"tg://user?id=' + str(message.forward_from.id) + '\">' + def_to_whom_say(message.forward_from)[0] + '</a></strong>\n\n' + message.text
            if def_to_whom_say(message.forward_from)[1] == 'Yes': # —Ç.–µ. –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –æ—Ç–∫—Ä—ã—Ç—ã –Ω–µ –∏–º—è –Ω–∏ —Ñ–∞–º–∏–ª–∏—è (JustIdYNo = 'Yes'), –∞ –∑–Ω–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ id - —Ç–æ –≤–æ–≤–Ω–µ –¢–µ–ª–µ–≥—Ä–∞–º–∞ —É–±–∏—Ä–∞–µ–º –µ–≥–æ –§–ò–û (—Ç–æ—á–Ω–µ–µ, —É–±–∏—Ä–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ id)
                textOfForvardObiavyPlain = '#–≤–∞–∫–∞–Ω—Å–∏—è\n\n' + message.text                
            else:
                textOfForvardObiavyPlain = '#–≤–∞–∫–∞–Ω—Å–∏—è –æ—Ç ' + def_to_whom_say(message.forward_from)[0] + '\n\n' + message.text

            await message.answer(text=f'–ò—Ç–æ–≥–æ –ø–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç:\n\n{textOfForvardObiavyHtml}', parse_mode=types.ParseMode.HTML)
            await Status.st_ADM_02.set()
            await message.answer("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É?", reply_markup=ADMIN_get_inline_kb_Yes_No()) 
    else:
        await message.reply("–ù–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. –ù–∞–∂–º–∏—Ç–µ /begin –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")

# –õ–æ–≤–∏–º –æ—Ç–≤–µ—Ç –æ—Ç –ê–î–ú–ò–ù–ê
@dp.callback_query_handler(lambda c: c.data and c.data.startswith('AdminYNbtn'), state=Status.st_ADM_02)
async def process_callback_from_menuYN(callback_query: types.CallbackQuery):
    global begining_text, text_of_obiavy, full_text_telegram, codeDO, send_admin, textOfForvardObiavyHtml, textOfForvardObiavyPlain
    codeYN = callback_query.data[-1]
    if codeYN.isdigit():
        codeYN = int(codeYN)
    await Status.st_00.set()
    if codeYN == 1:
        await bot.send_message(chat_id = CHAT, text=textOfForvardObiavyHtml, parse_mode=types.ParseMode.HTML)
        # –Ω–∏–∂–µ 5 —Å—Ç—Ä–æ—á–µ–∫ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –í–ö
        message_to_VK = ('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º:\n\n' + textOfForvardObiavyPlain + '\n\n–ò—Å—Ç–æ—á–Ω–∏–∫:\nhttps://t.me/jobzakupki')
        params = {'owner_id':int(groupId_in_VK), 'from_group': 1, 'message': message_to_VK, 'access_token': token_VK_access_token_to_walls, 'v':5.103} # —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥—É–±–ª—è –Ω–∞ –í–ö
        requests.get('https://api.vk.com/method/wall.post', params=params)
        # –Ω–∏–∂–µ 3 —Å—Ç—Ä–æ—á–∫–∏ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –§–ë
        graph = facebook.GraphAPI(ACCESS_TOKEN_Facebook)
        message_to_FB = message_to_VK
        graph.put_object(groupid_in_FB, "feed", message=message_to_FB)
        await bot.send_message(callback_query.from_user.id, f'–ê–î–ú–ò–ù, —Å–ø–∞—Å–∏–±–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –í–ê–ö–ê–ù–°–ò–ï–ô —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ. –ß–µ–º-—Ç–æ –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å? –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –µ—â–µ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å–∫" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /begin \n–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤:\n https://t.me/InterfaxProZakupkiNews \n https://t.me/jobzakupki\n\nP.S.–ï—Å–ª–∏ –≤–Ω–∏–∑—É –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨ - –≤–≤–µ–¥–∏—Ç–µ /start –∏ –Ω–∞–∂–º–∏—Ç–µ Enter') 
    elif codeYN == 2:
        await bot.send_message(callback_query.from_user.id, f'–ê–î–ú–ò–ù, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ù–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –µ—â–µ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫—É \"–ó–∞–ø—É—Å–∫\" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /begin') 
    elif codeYN == 3:
        textOfForvardObiavyHtml = textOfForvardObiavyHtml.replace("#–≤–∞–∫–∞–Ω—Å–∏—è", "#—Ä–µ–∑—é–º–µ")
        await bot.send_message(chat_id = CHAT, text=textOfForvardObiavyHtml, parse_mode=types.ParseMode.HTML)
        # –Ω–∏–∂–µ 5 —Å—Ç—Ä–æ—á–µ–∫ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –í–ö
        textOfForvardObiavyPlain = textOfForvardObiavyPlain.replace("#–≤–∞–∫–∞–Ω—Å–∏—è", "#—Ä–µ–∑—é–º–µ")
        message_to_VK = ('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º:\n\n' + textOfForvardObiavyPlain + '\n\n–ò—Å—Ç–æ—á–Ω–∏–∫:\nhttps://t.me/jobzakupki')
        params = {'owner_id':int(groupId_in_VK), 'from_group': 1, 'message': message_to_VK, 'access_token': token_VK_access_token_to_walls, 'v':5.103} # —ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥—É–±–ª—è –Ω–∞ –í–ö
        requests.get('https://api.vk.com/method/wall.post', params=params)
        # –Ω–∏–∂–µ 3 —Å—Ç—Ä–æ—á–∫–∏ - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –§–ë
        graph = facebook.GraphAPI(ACCESS_TOKEN_Facebook)
        message_to_FB = message_to_VK
        graph.put_object(groupid_in_FB, "feed", message=message_to_FB)

        await bot.send_message(callback_query.from_user.id, f'–ê–î–ú–ò–ù, —Å–ø–∞—Å–∏–±–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –†–ï–ó–Æ–ú–ï —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ. –ß–µ–º-—Ç–æ –µ—â–µ –º–æ–≥—É –ø–æ–º–æ—á—å? –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –µ—â–µ —Ä–∞–∑. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å–∫" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /begin \n–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ–¥–∏–Ω –∏–∑ –∫–∞–Ω–∞–ª–æ–≤:\n https://t.me/InterfaxProZakupkiNews \n https://t.me/jobzakupki\n\nP.S.–ï—Å–ª–∏ –≤–Ω–∏–∑—É –ø—Ä–æ–ø–∞–ª–∏ –∫–Ω–æ–ø–∫–∏ –ó–ê–ü–£–°–ö –∏ –ü–û–ú–û–©–¨ - –≤–≤–µ–¥–∏—Ç–µ /start –∏ –Ω–∞–∂–º–∏—Ç–µ Enter') 
    else:
    	await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! codeYN={codeYN}')
    # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await callback_query.message.delete_reply_markup() 
    # –ù–µ –∑–∞–±—ã–≤–∞–µ–º –æ—Ç—á–∏—Ç–∞—Ç—å—Å—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–±—ç–∫–∞
    await callback_query.answer()


# –õ–æ–≤–∏–º –≤—Å–µ –∏–Ω—ã–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã - –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è
@dp.message_handler(content_types=types.ContentTypes.TEXT, state="*") 
async def strange_txt(message: types.Message):
    if message.from_user.username == "sukhadol":
        await message.reply("–æ –º–æ–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ü—Ä–æ—Å—Ç–æ –æ—Ç–ª–æ–≤ –ø–æ—Å—Ç–æ–≤!!")        
    else:
        await message.reply("–ù–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. –ù–∞–∂–º–∏—Ç–µ /begin –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")

# –õ–æ–≤–∏–º –≤–æ–æ–±—â–µ –≤—Å–µ –∏–Ω–æ–µ - —Å–º–∞–π–ª—ã, —Ñ–∞–π–ª—ã –∏ –¥—Ä.
@dp.message_handler(content_types=types.ContentType.ANY, state="*") 
async def strange_txt(message: types.Message):
    await message.reply("–ù–µ –ø–æ–Ω–∏–º–∞—é –í–∞—Å. –ù–∞–∂–º–∏—Ç–µ /begin –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")

#=================================================
#======= –∞ —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –í –ö–ê–ù–ê–õ–ï - –ø–æ —Ñ–∞–∫—Ç—É —Ç–æ–ª—å–∫–æ –æ—Ç –∞–¥–º–∏–Ω–∞

test_chanel = -516530210 # —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª "02_–ß–ê–¢ –∞–¥–º–∏–Ω—Å–∫–∏–π —Ç–µ—Å—Ç"
@dp.channel_post_handler(chat_id=CHAT)
async def process_post(post: types.Message):
    print('...–≤ —Å–æ–æ–±—â–µ–Ω–∏–∏  –≤–æ—Ç —Ç–∞–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ')
    print(post.text) # —ç—Ç–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    #—Ç—É—Ç –Ω–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã - –≤ –∫–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –Ω–∞–¥–æ –∏–ª–∏ –ù–ï –Ω–∞–¥–æ —Ñ–æ—Ä–≤–∞—Ä–¥–∏—Ç—å —Ä–∞–∑–º–µ—â–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if(post.text.startswith('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –§–µ–π—Å–±—É–∫–∞')):
        await bot.send_message(chat_id = test_chanel, text="... ... –µ—Å—Ç—å —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –§–µ–π—Å–±—É–∫–∞", parse_mode='Markdown')          
    elif(post.text.startswith('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ')):
        await bot.send_message(chat_id = test_chanel, text="... ... –µ—Å—Ç—å —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ", parse_mode='Markdown')   
    elif(post.text.startswith('–§–æ—Ä–≤–∞—Ä–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º')):
        await bot.send_message(chat_id = test_chanel, text="... ... –µ—Å—Ç—å —Ñ–æ—Ä–≤–∞—Ä–¥–Ω—É—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º", parse_mode='Markdown')          
    else:
        await bot.send_message(chat_id = test_chanel, text="... ... –µ—Å—Ç—å –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–Ω—É—Ç—Ä–∏ –¢–µ–ª–µ–≥—Ä–∞–º", parse_mode='Markdown')  
        await bot.send_message(chat_id = test_chanel, text=post.text, parse_mode='Markdown')     # –∫–∏–¥–∞–µ–º –≤–æ–æ–±—â–µ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª "02_–ß–ê–¢ –∞–¥–º–∏–Ω—Å–∫–∏–π —Ç–µ—Å—Ç" 


#@bot.on(events.NewMessage(CHAT)) # —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç –µ—â–µ –æ–¥–Ω–æ–≥–æ –∞–¥–¥–æ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ –Ω–µ–µ
# async def my_event_handler(event):
#     print(event.stringify())  # —ç—Ç–æ –ø–æ–ª–Ω—ã–π json —Å–æ–æ–±—â–µ–Ω–∏—è
#     print(event.message.message) # —ç—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è




if __name__ == '__main__':
    if Run_On_Heroku:
        start_webhook(dispatcher=dp, webhook_path=WEBHOOK_PATH, on_startup=on_startup, on_shutdown=on_shutdown,
                    skip_updates=True, host=WEBAPP_HOST, port=WEBAPP_PORT)
    else:
        executor.start_polling(dp, on_shutdown=on_shutdown)
